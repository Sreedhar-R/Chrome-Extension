{"version":3,"sources":["Images/landscape6.jpg","Images/landscape7.jpg","Images/landscape8.jpg","Images/landscape9.jpg","Images/landscape10.jpg","components/data.js","components/App.js","reportWebVitals.js","index.js"],"names":["quotes","backgrounds","img1","img2","img3","img4","img5","App","quote","Math","floor","random","length","background","fetchTime","d","Date","time","getHours","slice","getMinutes","console","log","setState","fetchTemp","a","fetch","ipJsonResp","json","ipObj","ip","cityJsonResp","cityObj","city","cityName","tempJsonResp","tempObj","temp","current","temperature","componentDidMount","name","localStorage","getItem","todo","onboard","JSON","parse","timeTimer","setInterval","tempTimer","componentWillUnmount","clearInterval","handleChange","e","target","value","query","todoTitle","nameAdd","preventDefault","state","setItem","searchQuery","url","window","open","todoAdd","title","isDone","stringify","toggleTodo","todoNew","deleteTodo","className","src","this","alt","onSubmit","type","onChange","checked","onClick","style","textDecoration","class","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bcaf025.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/landscape6.46452b40.jpg\";","export default __webpack_public_path__ + \"static/media/landscape7.65c86a72.jpg\";","export default __webpack_public_path__ + \"static/media/landscape8.f5b0860b.jpg\";","export default __webpack_public_path__ + \"static/media/landscape9.c51abebb.jpg\";","export default __webpack_public_path__ + \"static/media/landscape10.9fef7aad.jpg\";","import img1 from '../Images/landscape6.jpg';\r\nimport img2 from '../Images/landscape7.jpg';\r\nimport img3 from '../Images/landscape8.jpg';\r\nimport img4 from '../Images/landscape9.jpg';\r\nimport img5 from '../Images/landscape10.jpg';\r\n\r\n\r\nexport const quotes = [\r\n    'If you work on something a little bit every day, you end up with something that is massive.',\r\n    'Never give up on a dream just because of the time it will take to accomplish it. The time will pass anyway.',\r\n    'If you cannot do great things, do small things in a great way.',\r\n    'Nothing will work unless you do.',\r\n    'To handle yourself, use your head; to handle others, use your heart.',\r\n    'What defines us is how well we rise after falling.',\r\n]\r\n\r\nexport const backgrounds = [\r\n    img1,\r\n    img2,\r\n    img3,\r\n    img4,\r\n    img5,\r\n]","import React, { Component } from 'react';\r\nimport {quotes, backgrounds} from './data';\r\nimport '../styles/App.css' ;\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    timeTimer;\r\n    tempTimer;\r\n\r\n    //tempTimer;\r\n\r\n    quote = quotes[Math.floor(Math.random()*quotes.length)]\r\n    background = backgrounds[Math.floor(Math.random()*backgrounds.length)];\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            name:'',\r\n            query:'',\r\n            todo:{},\r\n            todoTitle:'',\r\n            onboard:false,\r\n            temp:'',\r\n            time:'',\r\n            city:''\r\n        }\r\n    }\r\n\r\n    fetchTime = () => {\r\n        let d = new Date() ;\r\n        let time = ('0' + d.getHours()).slice(-2) + ':' + ('0' + d.getMinutes()).slice(-2);\r\n        console.log(time);\r\n        this.setState({time});\r\n    }\r\n\r\n    fetchTemp = async() => {\r\n        const ipJsonResp = await fetch('https://api.ipify.org/?format=json');\r\n        const ipObj = await ipJsonResp.json();\r\n        console.log(ipObj.ip);\r\n\r\n        const cityJsonResp = await fetch(`https://api.ipinfodb.com/v3/ip-city/?key=f767493ed02b334854451e59119c0d4b52d13962686701b96df91a315a86d236&ip=${ipObj.ip}&format=json`);\r\n        const cityObj = await cityJsonResp.json();\r\n        this.setState({city : cityObj.cityName});\r\n        console.log(cityObj.cityName);\r\n\r\n        const tempJsonResp = await fetch(`http://api.weatherstack.com/current?access_key=85eced8e03eb0542a49b547653636cd1&query=${cityObj.cityName}`);\r\n        const tempObj = await tempJsonResp.json();\r\n        let temp = tempObj.current.temperature;\r\n        this.setState({temp});\r\n    }\r\n\r\n    componentDidMount = async() => {\r\n        let name = localStorage.getItem(\"name\");\r\n        let todo = localStorage.getItem(\"todo\");\r\n\r\n        if ( name!== null) {\r\n            await this.setState({onboard : true,name:name});\r\n        }\r\n\r\n        if (todo!==null) {\r\n            await this.setState({todo : JSON.parse(todo)});\r\n        }\r\n        this.fetchTime();\r\n        this.timeTimer = setInterval(this.fetchTime,60000); \r\n\r\n        this.fetchTemp();\r\n        this.tempTimer = setInterval(this.fetchTemp,3600000)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.timeTimer);\r\n        clearInterval(this.tempTimer);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        if(name === 'query'){\r\n            this.setState({query:value})\r\n        }else if(name === 'todo'){\r\n            this.setState({todoTitle: value})\r\n        }else if(name === 'name'){\r\n            this.setState({name: value})\r\n        }\r\n    }\r\n\r\n    nameAdd = (e) => {\r\n        e.preventDefault() ;\r\n        if(this.state.name !== ''){\r\n            this.setState({onboard : true})\r\n        }\r\n        localStorage.setItem('name',this.state.name);\r\n    }\r\n\r\n    searchQuery = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.query != ''){\r\n            let url = `https://www.google.com/search?q=${this.state.query}`;\r\n            window.open(url,'_self')\r\n        }\r\n    }\r\n\r\n    todoAdd = async(e) => {\r\n        e.preventDefault();\r\n        if(this.state.todo.title == null && this.state.todoTitle !== ''){\r\n            let todo = {title:this.state.todoTitle, isDone:false};\r\n            await this.setState({ todo: todo });\r\n        }\r\n        localStorage.setItem('todo', JSON.stringify(this.state.todo))\r\n    }\r\n\r\n    toggleTodo = async() => {\r\n        let todoNew = {...this.state.todo};\r\n        todoNew.isDone = !todoNew.isDone;\r\n        await this.setState({todo:todoNew});\r\n        localStorage.setItem('todo', JSON.stringify(this.state.todo))\r\n    }\r\n\r\n    deleteTodo = async() => {\r\n        await this.setState({todo : {}}) ;\r\n        localStorage.setItem('todo', JSON.stringify(this.state.todo))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mainBackground\">\r\n                <img src={this.background} alt=\"Background_image\" className=\"png\"/>\r\n                {this.state.onboard?\r\n                (\r\n                <div className=\"mainBox\">\r\n                    <div className=\"header\">\r\n                        <div>\r\n                            <form onSubmit={this.searchQuery}>\r\n                                <i className=\"fas fa-search\"></i>\r\n                                <input type=\"text\" className=\"google_search\" name=\"query\" onChange={this.handleChange} value={this.state.query}/>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{this.state.temp}<sup>o</sup></span>\r\n                            <div className=\"cityName\">\r\n                            {this.state.city}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <div className=\"center--time\">{this.state.time}</div>\r\n                        <div className='center--personal_line'>You matter,{this.state.name}</div>\r\n                        {this.state.todo.title == null ?\r\n                        (\r\n                            <>\r\n                                <div className='center--asking_line'>What is your main focus today?</div>\r\n                                <form onSubmit={this.todoAdd}> \r\n                                    <input type=\"text\" className=\"todoInput\" name=\"todo\" onChange={this.handleChange} value={this.state.todoTitle}/>\r\n                                </form>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n                                <div className='todo_headtext'>Your main focus TODAY</div>\r\n                                <div className='todo--mainBlock'>\r\n                                    <input type=\"checkbox\" checked = {this.state.todo.isDone} className='checkbox' onClick={this.toggleTodo}/>\r\n                                    <div className='todo--title' style={this.state.todo.isDone ? {textDecoration : 'line-through'} : {}}>{this.state.todo.title}</div>\r\n                                    <i class=\"fas fa-times\" onClick={this.deleteTodo}></i>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"footer\">\r\n                        <div>\r\n                            Sreedhar R, Creator\r\n                        </div>\r\n                        <div className='footer--quote'>\r\n                            {this.quote}\r\n                        </div>\r\n                        <div>\r\n                            @newtanian\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n                :\r\n                (\r\n                    <div className=\"center\">\r\n                        <div className='center--personal_line'>What's your name?</div>\r\n                        <form onSubmit={this.nameAdd}>\r\n                            <input type='text' className='todoInput' name='name' onChange={this.handleChange} value={this.state.name}/>\r\n                        </form>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}